name: OCV PR:4.x W10 UWP

on:
  pull_request:
    branches:
      - main
    paths:
      - '.github/workflows/OCV-PR-4.x-W10-UWP.yaml'
  workflow_call:

concurrency:
  group: OCV-PR-4.x-W10-UWP-${{ github.ref }}
  cancel-in-progress: true

env:
  EXTRA_CMAKE_OPTIONS: '\
    -DOPENCV_DOWNLOAD_PATH=%BINARIES_CACHE% \
    -DBUILD_opencv_gapi=OFF \
    -DWITH_MSMF=OFF \
    -DBUILD_TESTS=OFF \
    -DBUILD_PERF_TESTS=OFF \
    -DBUILD_EXAMPLES=OFF \
    -DBUILD_opencv_apps=OFF \
    -DCMAKE_BUILD_TYPE=Release \
    '
  PR_AUTHOR: ${{ github.event.pull_request.user.login }}
  PR_AUTHOR_FORK: ${{ github.event.pull_request.head.repo.full_name }}
  SOURCE_BRANCH_NAME: ${{ github.head_ref }}
  TARGET_BRANCH_NAME: ${{ github.base_ref }}

jobs:
  BuildAndTest:
    runs-on: opencv-cn-win
    defaults:
      run:
        shell: cmd
    steps:
    - name: Brief system information
      timeout-minutes: 60
      run: bash %GIT_CACHE%\print_system_information.sh
    - name: Setup infra environment
      timeout-minutes: 60
      if: ${{ github.event.repository.name == 'ci-gha-workflow' }}
      shell: bash
      run: echo "TARGET_BRANCH_NAME=4.x" >> $GITHUB_ENV
    - name: PR info
      timeout-minutes: 60
      run: |
        echo "PR Author: ${{ env.PR_AUTHOR }}"
        echo "PR Author fork: ${{ env.PR_AUTHOR_FORK }}"
        echo "Source branch name: ${{ env.SOURCE_BRANCH_NAME }}"
        echo "Target branch name: ${{ env.TARGET_BRANCH_NAME }}"
    - name: Clean
      timeout-minutes: 60
      run: cd ${{ github.workspace }} && rm -rf *
    - name: Fetch opencv
      timeout-minutes: 60
      run: cd ${{ github.workspace }} && git clone --branch ${{ env.TARGET_BRANCH_NAME }} --reference %GIT_CACHE%\opencv.git git@github.com:opencv/opencv.git
    - name: Merge opencv with ${{ env.SOURCE_BRANCH_NAME }} branch
      timeout-minutes: 60
      if: ${{ github.event.repository.name != 'ci-gha-workflow' }}
      run: |
        cd ${{ github.workspace }}\opencv
        git pull -v "git@github.com:${{ env.PR_AUTHOR_FORK }}" "${{ env.SOURCE_BRANCH_NAME }}"
    - name: Configure OpenCV
      timeout-minutes: 60
      run: |
        mkdir ${{ github.workspace }}\build && cd ${{ github.workspace }}\build
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat"
        cmake -G "Visual Studio 16 2019" -A x64 -DCMAKE_SYSTEM_NAME=WindowsStore -DCMAKE_SYSTEM_VERSION=10.0 ${{ env.EXTRA_CMAKE_OPTIONS }} ${{ github.workspace }}\opencv
    - name: Build OpenCV
      timeout-minutes: 60
      id: build-opencv
      run: |
        cd ${{ github.workspace }}\build
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat"
        cmake --build . | tee ${{ github.workspace }}\build\build-log.txt
    - name: Warnings check
      timeout-minutes: 60
      run: cd ${{ github.workspace }}\build && python %CI_SCRIPTS%\warnings-handling.py
