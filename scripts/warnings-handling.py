import argparse
import os
import re
import sys


def is_suppressed(line):
    supression_list = [
        'WARNING:[CXX5106]', # warning is generated by gradle and AGP
        'WARNING:[CXX5202]', # warning is generated by gradle and AGP, as each arch is built independently
        '--illegal-access=permit; support was removed in 17.0', # OpenJDK warning not related to build
        'warning: section flags ignored on section redeclaration', # x86 32-bit warning in jpeg-turbo
        'warning: [removal] finalize() in Object has been deprecated and marked for removal', # https://github.com/opencv/opencv/issues/22260
    ]
    for sup in supression_list:
        if sup in line:
            return True
    return False


def warnings_count(filename, verbose):
    rx = re.compile(r'warning[: ]', re.I)
    warnings = 0
    suppressed = 0
    total = 0
    for line in open(filename):
        total += 1
        match = rx.search(line)
        if match:
            if is_suppressed(line):
                suppressed += 1
            else:
                print("::warning::{}".format(line.rstrip()), flush=True)
                warnings += 1
                continue
        if verbose:
            print(line.rstrip())
    return total, suppressed, warnings

if __name__ == '__main__':

    parser = argparse.ArgumentParser(description='Check warnings produced during build')
    parser.add_argument('filename', help='Path to the log file.', default='build-log.txt')
    parser.add_argument('-v', '--verbose', action='store_true', help='Print all lines and mark warnings')
    args = parser.parse_args()

    print("::group::Warning check", flush=True)
    total, suppressed, warnings = warnings_count(args.filename, args.verbose)
    print("::endgroup::", flush=True)
    print("::notice::Warning stats => total lines: {}, suppressed: {}, warnings: {}".format(total, suppressed, warnings), flush=True)

    if warnings != 0:
        sys.exit(1)
    sys.exit(0)
